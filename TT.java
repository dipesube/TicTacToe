/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;

import java.util.Random;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Geust
 */
public class TT extends javax.swing.JFrame {

    /**
     * Creates new form TT
     */
    private Gamee gg = new Gamee(); //instance of game, access the other class

    public TT() {
        initComponents();
        lblTurn.setText(gg.turn);
        lblX.setText("0");
        lblO.setText("0");
        lblDraw.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnReset = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblX = new javax.swing.JLabel();
        lblO = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        rbtnMode = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        lblDraw = new javax.swing.JLabel();
        lblTurn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnReset.setText("New Round");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 110, -1));

        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 73, 60));

        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 73, 60));

        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 73, 60));

        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 73, 60));

        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 73, 60));

        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 73, 60));

        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn9, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 73, 60));

        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 73, 60));

        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                func(evt);
            }
        });
        getContentPane().add(btn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 73, 60));

        jLabel2.setText("TIC TAC TOE");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        jLabel3.setText("Score:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, -1, -1));

        jLabel4.setText(" (X):");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, -1, -1));

        jLabel5.setText("(O):");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, -1, -1));

        lblX.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lblX, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 50, 20));

        lblO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lblO, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 50, 20));

        jLabel6.setText("Turn: ");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, -1));

        rbtnMode.setText("Player 2 is A.I.");
        rbtnMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnModeActionPerformed(evt);
            }
        });
        getContentPane().add(rbtnMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, -1, -1));

        jLabel1.setText("Draws:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 60, -1));

        lblDraw.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lblDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, 50, 20));

        lblTurn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lblTurn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 50, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void endGame() { //when a player wins, buttons are disabled
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                gg.board[i][j] = ' ';
            }
        }
        btn1.setEnabled(false);
        btn2.setEnabled(false);
        btn3.setEnabled(false);
        btn4.setEnabled(false);
        btn5.setEnabled(false);
        btn6.setEnabled(false);
        btn7.setEnabled(false);
        btn8.setEnabled(false);
        btn9.setEnabled(false);

    }

    public void moveAI() { //method for what moves will look like when eneterd values

        int x = generate();
        int y = generate();

        while (true) { //while below this is true
            if (gg.board[x][y] == 'X' || gg.board[x][y] == 'O') {
                x = generate();
                y = generate();
            } else {
                break;
            }
        }
        if (gg.choice == false) {
            gg.board[x][y] = 'O';
            if (x == 0 && y == 0) {
                btn1.setText("O");
                btn1.setEnabled(false);
                gg.choice = true;
            }
            if (x == 0 && y == 1) {
                btn2.setText("O");
                btn2.setEnabled(false);
                gg.choice = true;
            }
            if (x == 0 && y == 2) {
                btn3.setText("O");
                btn3.setEnabled(false);
                gg.choice = true;
            }
            if (x == 1 && y == 0) {
                btn4.setText("O");
                btn4.setEnabled(false);
                gg.choice = true;
            }
            if (x == 1 && y == 1) {
                btn5.setText("O");
                btn5.setEnabled(false);
                gg.choice = true;
            }
            if (x == 1 && y == 2) {
                btn6.setText("O");
                btn6.setEnabled(false);
                gg.choice = true;
            }
            if (x == 2 && y == 0) {
                btn7.setText("O");
                btn7.setEnabled(false);
                gg.choice = true;
            }
            if (x == 2 && y == 1) {
                btn8.setText("O");
                btn8.setEnabled(false);
                gg.choice = true;
            }
            if (x == 2 && y == 2) {
                btn9.setText("O");
                btn9.setEnabled(false);
                gg.choice = true;
            }
        } else {
            gg.board[x][y] = 'X';
            if (x == 0 && y == 0) {
                btn1.setText("X");
                btn1.setEnabled(false);
                gg.choice = false;
            }
            if (x == 0 && y == 1) {
                btn2.setText("X");
                btn2.setEnabled(false);
                gg.choice = false;
            }
            if (x == 0 && y == 2) {
                btn3.setText("X");
                btn3.setEnabled(false);
                gg.choice = false;
            }
            if (x == 1 && y == 0) {
                btn4.setText("X");
                btn4.setEnabled(false);
                gg.choice = false;
            }
            if (x == 1 && y == 1) {
                btn5.setText("X");
                btn5.setEnabled(false);
                gg.choice = false;
            }
            if (x == 1 && y == 2) {
                btn6.setText("X");
                btn6.setEnabled(false);
                gg.choice = false;
            }
            if (x == 2 && y == 0) {
                btn7.setText("X");
                btn7.setEnabled(false);
                gg.choice = false;
            }
            if (x == 2 && y == 1) {
                btn8.setText("X");
                btn8.setEnabled(false);
                gg.choice = false;
            }
            if (x == 2 && y == 2) {
                btn9.setText("X");
                btn9.setEnabled(false);
                gg.choice = false;
            }
        }
        if (gg.board[0][0] == 'X' && gg.board[0][1] == 'X' && gg.board[0][2] == 'X') {
            System.out.println("X won!");
            endGame();
            gg.winner = true;
            gg.scorex++;
        }
        if (gg.board[0][0] == 'X' && gg.board[1][0] == 'X' && gg.board[2][0] == 'X') {
            System.out.println("X won!");
            endGame();
            gg.winner = true;
            gg.scorex++;

        }
        if (gg.board[0][2] == 'X' && gg.board[1][2] == 'X' && gg.board[2][2] == 'X') {
            System.out.println("X won!");
            endGame();
            gg.winner = true;
            gg.scorex++;

        }
        if (gg.board[2][0] == 'X' && gg.board[2][1] == 'X' && gg.board[2][2] == 'X') {
            System.out.println("X won!");
            endGame();
            gg.winner = true;
            gg.scorex++;

        }
        if (gg.board[1][0] == 'X' && gg.board[1][1] == 'X' && gg.board[1][2] == 'X') {
            System.out.println("X won!");
            endGame();
            gg.winner = true;
            gg.scorex++;

        }
        if (gg.board[0][1] == 'X' && gg.board[1][1] == 'X' && gg.board[2][1] == 'X') {
            System.out.println("X won!");
            endGame();
            gg.winner = true;
            gg.scorex++;

        }
        if (gg.board[0][0] == 'X' && gg.board[1][1] == 'X' && gg.board[2][2] == 'X') {
            System.out.println("X won!");
            endGame();
            gg.winner = true;
            gg.scorex++;

        }
        if (gg.board[0][2] == 'X' && gg.board[1][1] == 'X' && gg.board[2][0] == 'X') {
            System.out.println("X won!");
            endGame();
            gg.winner = true;
            gg.scorex++;

        }
        if (gg.board[0][0] == 'O' && gg.board[0][1] == 'O' && gg.board[0][2] == 'O') {
            System.out.println("O won!");
            endGame();
            gg.winner = true;
            gg.scoreo++;

        }
        if (gg.board[0][0] == 'O' && gg.board[1][0] == 'O' && gg.board[2][0] == 'O') {
            System.out.println("O won!");
            endGame();
            gg.winner = true;
            gg.scoreo++;

        }
        if (gg.board[0][2] == 'O' && gg.board[1][2] == 'O' && gg.board[2][2] == 'O') {
            System.out.println("O won!");
            endGame();
            gg.winner = true;
            gg.scoreo++;

        }
        if (gg.board[2][0] == 'O' && gg.board[2][1] == 'O' && gg.board[2][2] == 'O') {
            System.out.println("O won!");
            endGame();
            gg.winner = true;
            gg.scoreo++;

        }
        if (gg.board[1][0] == 'O' && gg.board[1][1] == 'O' && gg.board[1][2] == 'O') {
            System.out.println("O won!");
            endGame();
            gg.winner = true;
            gg.scoreo++;

        }
        if (gg.board[0][1] == 'O' && gg.board[1][1] == 'O' && gg.board[2][1] == 'O') {
            System.out.println("O won!");
            endGame();
            gg.winner = true;
            gg.scoreo++;

        }
        if (gg.board[0][0] == 'O' && gg.board[1][1] == 'O' && gg.board[2][2] == 'O') {
            System.out.println("O won!");
            endGame();
            gg.winner = true;
            gg.scoreo++;

        }
        if (gg.board[0][2] == 'O' && gg.board[1][1] == 'O' && gg.board[2][0] == 'O') {
            System.out.println("O won!");
            endGame();
            gg.winner = true;
            gg.scoreo++;

        }
        int countx = 0;
        int counto = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (gg.board[i][j] == 'X') {
                    countx++;
                }

                if (gg.board[i][j] == 'O') {
                    counto++;
                }
            }
        }
        if ((countx == 5 && counto ==4) ||(countx ==4 && counto ==5)) {
            JOptionPane.showMessageDialog(null, "Its a draw. No one wins!");
            
        }
        lblX.setText("" + gg.scorex);
        lblO.setText("" + gg.scoreo);

    }

    public int generate() {
        Random rnd = new Random();
        int x = rnd.nextInt(3);
        return x;
    }
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        System.out.println(gg.winner + "d");

        gg.winner = false;
        if (rbtnMode.isSelected() == true) {
            moveAI();
        }
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                gg.board[i][j] = ' ';
            }
        }

        btn1.setEnabled(true);
        btn2.setEnabled(true);
        btn3.setEnabled(true);
        btn4.setEnabled(true);
        btn5.setEnabled(true);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        btn8.setEnabled(true);
        btn9.setEnabled(true);
        btn1.setText("");
        btn2.setText("");
        btn3.setText("");
        btn4.setText("");
        btn5.setText("");
        btn7.setText("");
        btn8.setText("");
        btn9.setText("");
        btn6.setText("");

    }//GEN-LAST:event_btnResetActionPerformed

    private void func(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_func

        if (evt.getSource() instanceof JButton) { //checks if what is clicked is Button
            JButton btnJ = (JButton) evt.getSource(); //copies component of button that executes the same code
            if (gg.choice) {
                btnJ.setText("X");
                gg.choice = false;
                if (btnJ.equals(btn1)) {
                    gg.board[0][0] = 'X';
                } else if (btnJ.equals(btn2)) {
                    gg.board[0][1] = 'X';
                } else if (btnJ.equals(btn3)) {
                    gg.board[0][2] = 'X';
                } else if (btnJ.equals(btn4)) {
                    gg.board[1][0] = 'X';
                } else if (btnJ.equals(btn5)) {
                    gg.board[1][1] = 'X';
                } else if (btnJ.equals(btn6)) {
                    gg.board[1][2] = 'X';
                } else if (btnJ.equals(btn7)) {
                    gg.board[2][0] = 'X';
                } else if (btnJ.equals(btn8)) {
                    gg.board[2][1] = 'X';
                } else {
                    gg.board[2][2] = 'X';
                }
                if (gg.board[0][0] == 'X' && gg.board[0][1] == 'X' && gg.board[0][2] == 'X') {
                    System.out.println("X won!");
                    endGame();
                    gg.winner = true;
                    gg.scorex++;
                }
                if (gg.board[0][0] == 'X' && gg.board[1][0] == 'X' && gg.board[2][0] == 'X') {
                    System.out.println("X won!");
                    endGame();
                    gg.winner = true;
                    gg.scorex++;

                }
                if (gg.board[0][2] == 'X' && gg.board[1][2] == 'X' && gg.board[2][2] == 'X') {
                    System.out.println("X won!");
                    endGame();
                    gg.winner = true;
                    gg.scorex++;

                }
                if (gg.board[2][0] == 'X' && gg.board[2][1] == 'X' && gg.board[2][2] == 'X') {
                    System.out.println("X won!");
                    endGame();
                    gg.winner = true;
                    gg.scorex++;

                }
                if (gg.board[1][0] == 'X' && gg.board[1][1] == 'X' && gg.board[1][2] == 'X') {
                    System.out.println("X won!");
                    endGame();
                    gg.winner = true;
                    gg.scorex++;

                }
                if (gg.board[0][1] == 'X' && gg.board[1][1] == 'X' && gg.board[2][1] == 'X') {
                    System.out.println("X won!");
                    endGame();
                    gg.winner = true;
                    gg.scorex++;

                }
                if (gg.board[0][0] == 'X' && gg.board[1][1] == 'X' && gg.board[2][2] == 'X') {
                    System.out.println("X won!");
                    endGame();
                    gg.winner = true;
                    gg.scorex++;

                }
                if (gg.board[0][2] == 'X' && gg.board[1][1] == 'X' && gg.board[2][0] == 'X') {
                    System.out.println("X won!");
                    endGame();
                    gg.winner = true;
                    gg.scorex++;

                }
                lblX.setText("" + gg.scorex);

                lblTurn.setText("O");

                btnJ.setEnabled(false);
                if (rbtnMode.isSelected() == true) {
                    moveAI();
                }
            } else {
                btnJ.setText("O");
                gg.choice = true;
                if (btnJ.equals(btn1)) {
                    gg.board[0][0] = 'O';
                } else if (btnJ.equals(btn2)) {
                    gg.board[0][1] = 'O';
                } else if (btnJ.equals(btn3)) {
                    gg.board[0][2] = 'O';
                } else if (btnJ.equals(btn4)) {
                    gg.board[1][0] = 'O';
                } else if (btnJ.equals(btn5)) {
                    gg.board[1][1] = 'O';
                } else if (btnJ.equals(btn6)) {
                    gg.board[1][2] = 'O';
                } else if (btnJ.equals(btn7)) {
                    gg.board[2][0] = 'O';
                } else if (btnJ.equals(btn8)) {
                    gg.board[2][1] = 'O';
                } else {
                    gg.board[2][2] = 'O';
                }
                lblTurn.setText("X");

                btnJ.setEnabled(false);
                if (gg.board[0][0] == 'O' && gg.board[0][1] == 'O' && gg.board[0][2] == 'O') {
                    System.out.println("O won!");
                    endGame();
                    gg.winner = true;
                    gg.scoreo++;

                }
                if (gg.board[0][0] == 'O' && gg.board[1][0] == 'O' && gg.board[2][0] == 'O') {
                    System.out.println("O won!");
                    endGame();
                    gg.winner = true;
                    gg.scoreo++;

                }
                if (gg.board[0][2] == 'O' && gg.board[1][2] == 'O' && gg.board[2][2] == 'O') {
                    System.out.println("O won!");
                    endGame();
                    gg.winner = true;
                    gg.scoreo++;

                }
                if (gg.board[2][0] == 'O' && gg.board[2][1] == 'O' && gg.board[2][2] == 'O') {
                    System.out.println("O won!");
                    endGame();
                    gg.winner = true;
                    gg.scoreo++;

                }
                if (gg.board[1][0] == 'O' && gg.board[1][1] == 'O' && gg.board[1][2] == 'O') {
                    System.out.println("O won!");
                    endGame();
                    gg.winner = true;
                    gg.scoreo++;

                }
                if (gg.board[0][1] == 'O' && gg.board[1][1] == 'O' && gg.board[2][1] == 'O') {
                    System.out.println("O won!");
                    endGame();
                    gg.winner = true;
                    gg.scoreo++;

                }
                if (gg.board[0][0] == 'O' && gg.board[1][1] == 'O' && gg.board[2][2] == 'O') {
                    System.out.println("O won!");
                    endGame();
                    gg.winner = true;
                    gg.scoreo++;

                }
                if (gg.board[0][2] == 'O' && gg.board[1][1] == 'O' && gg.board[2][0] == 'O') {
                    System.out.println("O won!");
                    endGame();
                    gg.winner = true;
                    gg.scoreo++;

                }
                lblO.setText("" + gg.scoreo);
                if (rbtnMode.isSelected() == true) {
                    moveAI();
                }
            }

            if (!btn1.isEnabled() && !btn2.isEnabled() && !btn3.isEnabled() && !btn4.isEnabled() && !btn5.isEnabled() && !btn6.isEnabled() && !btn7.isEnabled() && !btn8.isEnabled() && !btn9.isEnabled()) {
                if (gg.winner == false) {
                    gg.draw++;
                    JOptionPane.showMessageDialog(null, "Its a draw! No one wins.");
                    lblDraw.setText("" + gg.draw++);
                }
            }
        }

        System.out.println(gg.winner);
    }//GEN-LAST:event_func

    private void rbtnModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnModeActionPerformed

        if (rbtnMode.isSelected() == true) {

            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    gg.board[i][j] = ' ';
                }
            }
            moveAI();

        }
    }//GEN-LAST:event_rbtnModeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblDraw;
    private javax.swing.JLabel lblO;
    private javax.swing.JLabel lblTurn;
    private javax.swing.JLabel lblX;
    private javax.swing.JRadioButton rbtnMode;
    // End of variables declaration//GEN-END:variables
}
